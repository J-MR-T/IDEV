<templateSet group="VHDL">
    <template name="iff" value="if $COND$ then&#10;    $END$&#10;end if;" description="Inserts ''if-and-only-if'' statement" toReformat="false" toShortenFQNames="true">
        <variable name="COND" expression="&quot;true&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="if" value="if $COND$ then&#10;    $END$" description="Inserts ''if' branch" toReformat="false" toShortenFQNames="true">
        <variable name="COND" expression="&quot;true&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="else" value="else &#10;    $END$" description="Inserts ''else'' branch" toReformat="false" toShortenFQNames="true">
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="elsif" value="elsif $COND$ then&#10;    $END$" description="Inserts ''elsif'' branch" toReformat="false" toShortenFQNames="true">
        <variable name="COND" expression="&quot;true&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="ife" value="if $COND$ then&#10;    $END$&#10;else&#10;    &#10;end if;" description="Inserts ''if-else'' statement" toReformat="false" toShortenFQNames="true">
        <variable name="COND" expression="&quot;true&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="ifre" value="if rising_edge($CLOCK$) then&#10;    $END$" description="Inserts ''if rising_edge(clock)'' branch" toReformat="false" toShortenFQNames="true">
        <variable name="CLOCK" expression="&quot;clock&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="process" value="$PROC_NAME$_proc : process $SENS_LIST$ is&#10;begin&#10;    $END$&#10;end process $PROC_NAME$_proc;" description="Inserts ''process'' statement" toReformat="false"
        toShortenFQNames="true">
        <variable name="PROC_NAME" expression="&quot;my&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="SENS_LIST" expression="&quot;(clock, reset)&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="ff"
        value="$PROC_NAME$_proc : process ($CLOCK$, $RESET$) is&#10;begin&#10;    if $RESET$ = $RESET_POLARITY$ then&#10;        $END$&#10;    elsif rising_edge($CLOCK$) then&#10;        &#10;    end if;&#10;end process $PROC_NAME$_proc;"
        description="Inserts ''synchronous process with reset'' statement" toReformat="false" toShortenFQNames="true">
        <variable name="PROC_NAME" expression="&quot;my&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="CLOCK" expression="&quot;clock&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="RESET" expression="&quot;reset&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="RESET_POLARITY" expression="enum(&quot;reset_polarity_g&quot;, &quot;'1'&quot;, &quot;'0'&quot;, &quot;true&quot;)" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="nrff" value="$PROC_NAME$_proc : process ($CLOCK$) is&#10;begin&#10;    if rising_edge($CLOCK$) then&#10;        $END$&#10;    end if;&#10;end process $PROC_NAME$_proc;"
        description="Inserts ''synchronous process without reset'' statement" toReformat="false" toShortenFQNames="true">
        <variable name="PROC_NAME" expression="&quot;my&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="CLOCK" expression="&quot;clock&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="function"
        value="function $FUNC_NAME$($PARAMS$) return $RETURN_TYPE$ is&#10;    variable return_v : $RETURN_TYPE$;&#10;begin&#10;    $END$&#10;    return return_v;&#10;end function $FUNC_NAME$;"
        description="Inserts ''function'' implementation" toReformat="false" toShortenFQNames="true">
        <variable name="FUNC_NAME" expression="&quot;my_function&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="PARAMS" expression="&quot;param : boolean&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="RETURN_TYPE" expression="&quot;integer&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="procedure" value="procedure $PROC_NAME$($PARAM1$; $PARAM2$) is&#10;begin&#10;    $END$&#10;end procedure $PROC_NAME$;" description="Inserts ''procedure'' implementation"
        toReformat="false" toShortenFQNames="true">
        <variable name="PROC_NAME" expression="&quot;my_procedure&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="PARAM1" expression="&quot;input : in boolean&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="PARAM2" expression="&quot;output : out boolean&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="for" value="for $PARAM$ in $RANGE$ loop&#10;    $END$&#10;end loop;" description="Inserts ''for'' loop" toReformat="false" toShortenFQNames="true">
        <variable name="PARAM" expression="&quot;i&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="RANGE" expression="&quot;0 to 7&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="fori" value="for $PARAM$ in $LEFT$ to $RIGHT$ loop&#10;    $END$&#10;end loop;" description="Inserts ''for'' loop from n TO m" toReformat="false" toShortenFQNames="true">
        <variable name="PARAM" expression="&quot;i&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="LEFT" expression="&quot;0&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="RIGHT" expression="&quot;7&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="forr" value="for $PARAM$ in $OBJECT$'range loop&#10;    $END$&#10;end loop;" description="Inserts ''for'' loop using RANGE attribute" toReformat="false" toShortenFQNames="true">
        <variable name="PARAM" expression="&quot;i&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="OBJECT" expression="&quot;vector&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="ifg" value="$GEN_NAME$_gen : if $COND$ generate&#10;begin&#10;    $END$&#10;end generate $GEN_NAME$_gen;" description="Inserts ''if-generate'' statement" toReformat="false"
        toShortenFQNames="true">
        <variable name="GEN_NAME" expression="&quot;my&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="COND" expression="&quot;true&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
    <template name="forg" value="$GEN_NAME$_gen : for $PARAM$ in $RANGE$ generate&#10;begin&#10;    $END$&#10;end generate $GEN_NAME$_gen;" description="Inserts ''for-generate'' statement"
        toReformat="false" toShortenFQNames="true">
        <variable name="GEN_NAME" expression="&quot;my&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="PARAM" expression="&quot;i&quot;" defaultValue="" alwaysStopAt="true" />
        <variable name="RANGE" expression="&quot;0 to 7&quot;" defaultValue="" alwaysStopAt="true" />
        <context>
            <option name="VHDL" value="true" />
        </context>
    </template>
</templateSet>